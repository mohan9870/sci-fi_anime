.quantum-skip-fx {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8); /* Darken background significantly */
    z-index: 20; /* Highest z-index to cover everything */
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    /* More dramatic filter effects for the warp */
    filter: blur(8px) hue-rotate(180deg) saturate(300%) contrast(150%);
    /* Combined entrance and exit animations */
    animation: quantumJumpIn 0.3s forwards, /* Quick entrance */
               quantumJumpOut 0.5s 0.3s forwards; /* Delayed exit after 0.3s */
}

@keyframes quantumJumpIn {
    from { opacity: 0; transform: scale(0.8) translateY(-50%); }
    to { opacity: 1; transform: scale(1) translateY(0); }
}

@keyframes quantumJumpOut {
    from { opacity: 1; transform: scale(1) translateY(0); }
    to { opacity: 0; transform: scale(1.2) translateY(50%); filter: blur(20px); }
}

/* Stutter warp visual animation (repeats during the FX duration) */
@keyframes quantumStutter {
    0% { transform: scale(1); filter: blur(5px) hue-rotate(0deg); }
    50% { transform: scale(1.02); filter: blur(10px) hue-rotate(180deg); }
    100% { transform: scale(1); filter: blur(5px) hue-rotate(0deg); }
}

.glitch-line {
    position: absolute;
    background-color: var(--neon-magenta); /* Magenta glitch lines */
    opacity: 0.7;
    box-shadow: 0 0 10px var(--neon-magenta);
    animation: glitchLine 0.05s infinite alternate; /* Very fast glitching */
}

/* Individual glitch line positioning */
.line-1 { top: 10%; left: 0; width: 100%; height: 5px; }
.line-2 { top: 40%; left: 0; width: 100%; height: 3px; }
.line-3 { top: 70%; left: 0; width: 100%; height: 7px; }

/* Note: `random()` is not standard CSS. For true randomness, you'd need JS.
   This example uses fixed values for demonstration. */
@keyframes glitchLine {
    0% { transform: translateX(0px) skewX(0deg); opacity: 0.7; }
    33% { transform: translateX(5px) skewX(10deg); opacity: 0.8; }
    66% { transform: translateX(-5px) skewX(-10deg); opacity: 0.6; }
    100% { transform: translateX(0px) skewX(0deg); opacity: 0.7; }
}

.glitch-text {
    font-size: 5em; /* Larger text for impact */
    color: var(--neon-cyan);
    text-shadow: 0 0 15px var(--neon-cyan), 0 0 30px rgba(0, 255, 255, 0.5);
    animation: textGlitchMore 0.05s steps(2, end) infinite alternate; /* Very fast text glitch */
}

@keyframes textGlitchMore {
    0% { transform: translate(0, 0); }
    25% { transform: translate(5px, -5px); color: var(--neon-purple); }
    50% { transform: translate(-5px, 5px); color: var(--neon-green); }
    75% { transform: translate(10px, 0px); color: var(--neon-magenta); }
    100% { transform: translate(0, 0); }
}